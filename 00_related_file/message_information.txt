메시지 길이를 계산하는 방법에 대해 문의가 많아 아래와 같이 최종적으로 변경하여 안내합니다.



$USER, MSG_TYPE, DATA_LENk, MSG_END, DATA의 각 문자열 길이 + (구분자 '|' * 4)로 전체 길이를 계산하시면 됩니다.



예시) 리눅스서버에 접속한 계정 이름이 s2020127022일 때 아래 커맨드를 실행할 경우 $USER 값은 문자열 "s2020127022"이 assign되어야 하며 이 문자열 "s2020127022"를 메시지 형태 구분의 USER_ID에 대한 값으로 사용하면 됩니다.

./client $USER



위 상황에서 $USER 값이 s2020127022인 간단한 메시지를 서버에게 보낸다고 하면,



s2020127022|0x10|5|0x00|Hello



를 서버에게 보내면 됩니다. 이때, 길이는 위 메시지의 문자열 길이 전체를 계산하면됩니다.



s2020127022 -> 11bytes

0x10 -> 4bytes

5 -> 1byte

0x00 -> 4bytes

Hello -> 5bytes

| 구분자 4개 -> 4bytes



메시지의 총 길이: 29bytes





그러면 서버는 | 구분자를 통해 각 메시지 형태에 담긴 데이터를 확인하고 MSG_TYPE에 맞는 메시지를 전달합니다.



s2020127022|0x11|5|0x00|Hello



클라이언트는 위 메시지를 받았을 때 MSG_TYPE이 0x11임을 확인하고 아래와 같이 간단하게 출력하면 됩니다. (출력문은 예시이므로 편한대로 출력하면 됩니다.)



s2020127022: Hello



여기서, 서버가 보내는  0x11 메시지는 에코메시지가 리턴될 수 있지만(본인 클라이언트에서 보낸 0x11 메시지가 MSG_TYPE만 0x11로 바뀌어 클라이언트가 받는 경우), 

서버 프로그램과 연결된 다른 클라이언트가 서버에게 보낸 0x10 메시지도 0x11로 변환되어 연결된 모든 클라이언트에게 메시지가 전달 됩니다(브로드캐스트).



위 상황에서 s2020127022 과 s2018120232 라는 user_id를 가진 2개의 클라이언트가 서버와 연결되어 있다고 가정할 때,

s2018120232가 user_id인 클라이언트에서 아래의 메시지를 보낼 경우



s2018120232|0x10|5|0x00|dongguk_mme



서버는 위 메시지를 받고 아래 메시지를 생성하여 s2020127022과 s2018120232 2개의 클라이언트에게 아래 메시지를 전달합니다.



s2018120232|0x11|0x00|dongguk_mme



이 경우에서 s2020127022이 user_id인 클라이언트는 메시지를 보내지 않았지만, s2018120232가 보낸 dongguk_mme 채팅 메시지를 받게 되며 이를 화면에 출력하면 됩니다.



만약 클라이언트 프로그램의 사용자가 메시지를 보내기 위해 입력을 하는 중에 수신이 될 경우 클라이언트는 수신된 메시지를 화면에 출력을 해야 하는데 이럴 경우 쓰레드(pThread)를 사용하여 수신만 수행하는 쓰레드, 송신만 수행하는 쓰레드를 처리하면 클라이언트 구현이 조금 편할 수 있습니다.



추가적으로,

아이디가 s2020127022인 학생이 아래와 같이 프로그램을 실행한다고 가정을 하면, $USER는 각 학생들이 로그인한 계정이름에 대한 문자열을 가지고 있음. 대표적으로 표현하기 위해 $USER라고 표현한 것이며, 메시지를 보낼때 "$USER|0x10|5|0x00|Hello"로 이름에 대한 문자열(USER_ID)을 "$USER"로 사용하시면 안됩니다.

./client $USER



클라이언트 프로그램 소스코드 내에서 



... 중략 ... 



int main(int argc, char* argv[]{



user_id = argv[1]; //user_id에 assign된 문자열을 메시지 제일 앞에 둠. 아이디가 s2020127022이므로 user_id 값은 "$USER" 이 아닌 "s2020127022" 입니다

... 중략 ... 



}



... 중략... 





-------

** 오픈되는 과제 서버 프로그램이나 수강생분들이 구현하는 클라이언트 프로그램이 모두 리눅스서버(linux.mme.dongguk.edu)에서 실행된다는 전제하에 과제를 수행하셔야 되며, 이때 server_inet으로 입력하는 주소는 127.0.0.1로 하시면 됩니다.



** 별첨2의 0x11 메시지 예시에서 $USER|0x10|5|0x00|Hello로 잘못 표기되어 있는데 위에 언급하였듯이 서버가 클라이언트에게 보내는 메시지는 아래와 같으니 참고바랍니다.

$USER|0x11|5|0x00|Hello